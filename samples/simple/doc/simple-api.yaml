openapi: 3.0.1
info:
  title: RESTly.Samples.SimpleApi
  version: '1.0'
paths:
  /weatherforecast:
    get:
      tags:
        - RESTly.Samples.SimpleApi
      operationId: GetWeatherForecast
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
  /file-upload:
    post:
      tags:
        - RESTly.Samples.SimpleApi
      operationId: FileUpload
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: byte
        required: true
      responses:
        '200':
          description: OK
  /dictionary:
    get:
      tags:
        - RESTly.Samples.SimpleApi
      operationId: GetDictionary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
  /cities:
    get:
      tags:
        - RESTly.Samples.SimpleApi
      operationId: QueryCities
      parameters:
        - name: q
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /things:
    get:
      tags:
        - RESTly.Samples.SimpleApi
      operationId: QueryThingsByIndex
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /items:
    get:
      tags:
        - RESTly.Samples.SimpleApi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
  '/items/{type}':
    get:
      tags:
        - RESTly.Samples.SimpleApi
      parameters:
        - name: type
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ItemType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
  /upload-single:
    post:
      tags:
        - RESTly.Samples.SimpleApi
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                style: form
      responses:
        '200':
          description: OK
  /upload-multiple:
    post:
      tags:
        - RESTly.Samples.SimpleApi
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file1
                - file2
              type: object
              properties:
                file1:
                  type: string
                  format: binary
                file2:
                  type: string
                  format: binary
            encoding:
              file1:
                style: form
              file2:
                style: form
      responses:
        '200':
          description: OK
  /upload-collection:
    post:
      tags:
        - RESTly.Samples.SimpleApi
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - files
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
            encoding:
              files:
                style: form
        required: true
      responses:
        '200':
          description: OK
  /floors:
    get:
      tags:
        - RESTly.Samples.SimpleApi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FloorItem'
  /derived-types:
    post:
      tags:
        - RESTly.Samples.SimpleApi
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SomeTypeBase'
                - $ref: '#/components/schemas/FinalType1'
                - $ref: '#/components/schemas/FinalType2'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SomeTypeBase'
                  - $ref: '#/components/schemas/FinalType1'
                  - $ref: '#/components/schemas/FinalType2'
    get:
      tags:
        - RESTly.Samples.SimpleApi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/SomeTypeBase'
                    - $ref: '#/components/schemas/FinalType1'
                    - $ref: '#/components/schemas/FinalType2'
  /header-parameter:
    get:
      tags:
        - RESTly.Samples.SimpleApi
      parameters:
        - name: x-header-parameter
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    FinalType1:
      allOf:
        - $ref: '#/components/schemas/SomeTypeBase'
        - type: object
          properties:
            value:
              type: integer
              format: int32
          additionalProperties: false
    FinalType2:
      allOf:
        - $ref: '#/components/schemas/SomeTypeBase'
        - type: object
          properties:
            tolerance:
              type: number
              format: double
            targetValue:
              type: number
              format: double
          additionalProperties: false
    FloorItem:
      allOf:
        - $ref: '#/components/schemas/SomeBaseItem'
        - type: object
          properties:
            floor:
              type: integer
              format: int32
          additionalProperties: false
    Item:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/ItemType'
      additionalProperties: false
    ItemType:
      enum:
        - TestItem1
        - TestItem2
      type: string
    SomeBaseItem:
      type: object
      properties:
        name:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
      additionalProperties: false
    SomeTypeBase:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
    WeatherForecast:
      type: object
      properties:
        date:
          type: string
          format: date-time
        temperatureC:
          type: integer
          format: int32
        summary:
          type: string
          nullable: true
        temperatureF:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false