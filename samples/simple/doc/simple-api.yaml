openapi: 3.0.1
info:
  title: RESTly.Samples.SimpleApi
  version: '1.0'
paths:
  /weatherforecast:
    get:
      tags:
        - RESTly.Samples.SimpleApi
      operationId: GetWeatherForecast
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
  /file-upload:
    post:
      tags:
        - RESTly.Samples.SimpleApi
      operationId: FileUpload
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: byte
        required: true
      responses:
        '200':
          description: OK
  /dictionary:
    get:
      tags:
        - RESTly.Samples.SimpleApi
      operationId: GetDictionary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
  /cities:
    get:
      tags:
        - RESTly.Samples.SimpleApi
      operationId: QueryCities
      parameters:
        - name: q
          in: query
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /things:
    get:
      tags:
        - RESTly.Samples.SimpleApi
      operationId: QueryThingsByIndex
      parameters:
        - name: q
          in: query
          required: true
          style: form
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /items:
    get:
      tags:
        - RESTly.Samples.SimpleApi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
  '/items/{type}':
    get:
      tags:
        - RESTly.Samples.SimpleApi
      parameters:
        - name: type
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
components:
  schemas:
    Item:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/ItemType'
      additionalProperties: false
    ItemType:
      enum:
        - TestItem1
        - TestItem2
      type: string
    WeatherForecast:
      type: object
      properties:
        date:
          type: string
          format: date-time
        temperatureC:
          type: integer
          format: int32
        summary:
          type: string
          nullable: true
        temperatureF:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false