{
  "openapi": "3.0.1",
  "info": {
    "title": "RESTly.Samples.TestApi | v1",
    "version": "1.0.0"
  },
  "paths": {
    "/weatherforecast": {
      "get": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/file-upload": {
      "post": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "operationId": "FileUpload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/dictionary": {
      "get": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "operationId": "GetDictionary",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cities": {
      "get": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "operationId": "QueryCities",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/things": {
      "get": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "operationId": "QueryThingsByIndex",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/items": {
      "get": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/items/{type}": {
      "get": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ItemType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/some-enum": {
      "post": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SomeTypeWithNullableEnum"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SomeTypeWithNullableEnum"
                }
              }
            }
          }
        }
      }
    },
    "/upload-single": {
      "post": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "$ref": "#/components/schemas/IFormFile"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload-multiple": {
      "post": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file1",
                  "file2"
                ],
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "file1": {
                        "$ref": "#/components/schemas/IFormFile"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "file2": {
                        "$ref": "#/components/schemas/IFormFile"
                      }
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/upload-collection": {
      "post": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/IFormFile"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/floors": {
      "get": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FloorItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/derived-types": {
      "post": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SomeTypeBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SomeTypeBase"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SomeTypeBase"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/header-parameter": {
      "get": {
        "tags": [
          "RESTly.Samples.TestApi"
        ],
        "parameters": [
          {
            "name": "x-header-parameter",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "FloorItem": {
        "required": [
          "floor",
          "name",
          "location"
        ],
        "type": "object",
        "properties": {
          "floor": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "location": {
            "type": "string"
          }
        }
      },
      "IFormFile": {
        "type": "string",
        "format": "binary"
      },
      "Item": {
        "required": [
          "uuid",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ItemType"
          }
        }
      },
      "ItemType": {
        "enum": [
          "TestItem1",
          "TestItem2"
        ]
      },
      "NullableOfSomeEnum": {
        "enum": [
          "Value1",
          "Value2",
          null
        ],
        "nullable": true
      },
      "SomeTypeBase": {
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/SomeTypeBaseFinalType1"
          },
          {
            "$ref": "#/components/schemas/SomeTypeBaseFinalType2"
          },
          {
            "$ref": "#/components/schemas/SomeTypeBaseBase"
          }
        ]
      },
      "SomeTypeBaseBase": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "SomeTypeBaseFinalType1": {
        "required": [
          "$type",
          "value",
          "name"
        ],
        "properties": {
          "$type": {
            "enum": [
              "FinalType1"
            ],
            "type": "string"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SomeTypeBaseFinalType2": {
        "required": [
          "$type",
          "tolerance",
          "targetValue",
          "name"
        ],
        "properties": {
          "$type": {
            "enum": [
              "FinalType2"
            ],
            "type": "string"
          },
          "tolerance": {
            "type": "number",
            "format": "double"
          },
          "targetValue": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SomeTypeWithNullableEnum": {
        "required": [
          "uuid",
          "someEnumValue"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "someEnumValue": {
            "$ref": "#/components/schemas/NullableOfSomeEnum"
          }
        }
      },
      "WeatherForecast": {
        "required": [
          "date",
          "temperatureC",
          "summary"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "RESTly.Samples.TestApi"
    }
  ]
}