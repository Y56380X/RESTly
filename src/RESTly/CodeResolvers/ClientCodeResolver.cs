// Copyright Y56380X https://github.com/Y56380X/RESTly.
// Licensed under the MIT License.

using Microsoft.OpenApi.Models;
using Restly.Models;

namespace Restly.CodeResolvers;

internal sealed class ClientCodeResolver : CodeResolverBase
{
	private readonly OpenApiDocument		  _apiSpecification;
	private readonly List<EndpointDefinition> _generatedMethodDeclarations;

	public ClientCodeResolver(OpenApiDocument apiSpecification, List<EndpointDefinition> generatedMethodDeclarations)
	{
		_apiSpecification		     = apiSpecification;
		_generatedMethodDeclarations = generatedMethodDeclarations;
	}

	protected override string Resolve()
	{
		var generatedMethodNames = new List<string>();
		
		// Generate REST call methods for API client
		// Endpoint code resolver writes to the _apiSpecification.Components
		// => this has to be done before generating the components code 
		var callsCode = _apiSpecification.Paths
			.OrderBy(path => path.Key)
			.Select(path => new EndpointCodeResolver(path.Key, path.Value, _apiSpecification, generatedMethodNames, _generatedMethodDeclarations))
			.Select(ecr => ecr.GeneratedCode)
			.Where(c => !string.IsNullOrWhiteSpace(c));
		
		var clientClassName = _apiSpecification.Info.Title?.Split('.').Last().NormalizeCsName();
		
		var clientCode =
			$$"""
			  // <auto-generated/>
			  // Copyright Y56380X https://github.com/Y56380X/RESTly.
			  // Licensed under the MIT License.
			  
			  using System;
			  using System.Linq;
			  using System.Net.Http;
			  using System.Net.Http.Json;
			  using System.Text.Json;
			  using System.Text.Json.Serialization;
			  using System.Threading;
			  using System.Threading.Tasks;
			  using System.Web;
			  using static Restly.I{{clientClassName}};

			  #nullable enable

			  namespace Restly;

			  public partial class {{clientClassName}} : I{{clientClassName}}, IDisposable
			  {
			  {{"\t"}}private readonly HttpClient _httpClient;
			  {{"\t"}}private readonly JsonSerializerOptions _jsonOptions;

			  {{"\t"}}public {{clientClassName}}(HttpClient httpClient)
			  {{"\t"}}{
			  {{"\t\t"}}_httpClient  = httpClient;
			  {{"\t\t"}}_jsonOptions = new JsonSerializerOptions
			  {{"\t\t"}}{
			  {{"\t\t\t"}}PropertyNameCaseInsensitive = true
			  {{"\t\t"}}};
			  {{"\t"}}}

			  {{"\t"}}public {{clientClassName}}(HttpClient httpClient, JsonSerializerOptions jsonOptions)
			  {{"\t"}}{
			  {{"\t\t"}}_httpClient  = httpClient;
			  {{"\t\t"}}_jsonOptions = jsonOptions;
			  {{"\t"}}}
			  
			  {{string.Join("\n\n", callsCode)}}

			  {{"\t"}}public void Dispose()
			  {{"\t"}}{
			  {{"\t\t"}}_httpClient.Dispose();
			  {{"\t"}}}
			  }
			  """;

		return clientCode;
	}
}